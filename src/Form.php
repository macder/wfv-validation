<?php
namespace WFV;
defined( 'ABSPATH' ) or die();

/**
 *
 *
 * @since 0.8.0
 */
class Form {
  /**
   * Form identifier
   *
   * @since 0.1.0
   * @access protected
   * @var string $action
   */
  protected $action;

  /**
   * User input
   *
   * @since 0.2.1
   * @since 0.7.2 WFV_Input instance
   * @access protected
   * @var class $input Instance of WFV\Input.
   */
  protected $input;

  /**
   * CSFR token
   * Token generated by wp_nonce()
   *
   * @since 0.8.0
   * @access protected
   * @var string $token Token value from wp_nonce()
   */
  protected $token;

  use AccessorTrait;
  use MutatorTrait;

  /**
   * Convenience method to repopulate checkbox or radio.
   * Returns 'checked' string if field has value in POST.
   *
   * @since 0.8.5
   *
   * @param string $field Field name.
   * @param string $value Value to compare against.
   * @return string|null
   */
  public function checked_if( $field, $value ) {
    return ( $this->input->contains( $field, $value ) ) ? 'checked' : null;
  }

  /**
   * Convenience method to repopulate select dropdown.
   * Returns 'selected' string if field has value in POST.
   *
   * @since 0.8.6
   *
   * @param string $field Field name.
   * @param string $value Value to compare against.
   * @return string|null
   */
  public function selected_if( $field, $value ) {
    return ( $this->input->contains( $field, $value ) ) ? 'selected' : null;
  }

  /**
   * TEMP - upcoming re-work
   *
   * Returns markup for required hidden fields
   * Makes theme file cleaner
   *
   * @since 0.8.0
   */
  public function get_token_fields() {
    // TODO - Move markup into a view
    $token_name = $this->action . '_token';

    echo $nonce_field = wp_nonce_field( $this->action, $token_name, false, false );
    echo $action_field = '<input type="hidden" name="action" value="'. $this->action .'">';
  }
}
